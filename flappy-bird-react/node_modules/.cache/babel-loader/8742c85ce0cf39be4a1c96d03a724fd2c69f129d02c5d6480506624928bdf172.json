{"ast":null,"code":"import _classCallCheck from \"D:/MUST/flappy-bird-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/MUST/flappy-bird-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"D:/MUST/flappy-bird-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/MUST/flappy-bird-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"D:\\\\MUST\\\\flappy-bird-react\\\\src\\\\containers\\\\PillarContainer.js\";\nimport React from \"react\";\nimport { v4 } from \"uuid\";\nimport $ from \"jquery\";\nimport Pillars from \"../components/Pillars\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar PillarContainer = /*#__PURE__*/function (_React$Component) {\n  _inherits(PillarContainer, _React$Component);\n  var _super = _createSuper(PillarContainer);\n  function PillarContainer(props) {\n    var _this;\n    _classCallCheck(this, PillarContainer);\n    _this = _super.call(this, props);\n    _this.state = {\n      pillars: []\n    };\n    _this.leftMargin = 200;\n    _this.windowHeight = $(document).height() - $(\"body\").offset().top - 80;\n    return _this;\n  }\n  _createClass(PillarContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n      this.timerID = setInterval(function () {\n        return _this2.updatePillars();\n      }, 1000);\n      this.moveLeft();\n    }\n\n    // Moves the pillars to the left\n  }, {\n    key: \"moveLeft\",\n    value: function moveLeft() {\n      var self = this;\n      if (!this.props.isGameOver) {\n        $(\"[id^=pillar]\").animate({\n          left: \"-=40px\" // Move the pillars to left\n        }, 250,\n        // Perform the animation every 250ms\n        \"linear\",\n        // For smooth transition of animation\n        function () {\n          self.moveLeft();\n        });\n      } else $(\"[id^=pillar]\").stop(true);\n    }\n\n    // Removes the old pillar and add new ones\n  }, {\n    key: \"updatePillars\",\n    value: function updatePillars() {\n      if (!this.props.isGameOver) {\n        var oldPillars = this.state.pillars;\n        if (oldPillars.length <= 10) {\n          // Total number of pillars are less than 10, add new pillars\n          var topHeight = Math.floor(Math.random() * 250) + 80;\n          var bottomHeight = this.windowHeight - topHeight - 60;\n          var abovePillarId = \"pillar\" + v4();\n          var belowPillarId = \"pillar\" + v4();\n          oldPillars.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"absolute\",\n              height: topHeight,\n              // marginBottom: \"100px\",\n              left: this.leftMargin + \"px\",\n              width: \"50px\",\n              backgroundColor: \"white\"\n            },\n            id: abovePillarId,\n            className: \"pillar\"\n          }, v4(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 6\n          }, this));\n          oldPillars.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"absolute\",\n              height: bottomHeight,\n              top: topHeight + 120,\n              left: this.leftMargin + \"px\",\n              width: \"50px\",\n              backgroundColor: \"white\"\n            },\n            id: belowPillarId,\n            className: \"pillar\"\n          }, v4(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 6\n          }, this));\n        } else {\n          // Pillar count has exceeded 10, remove the old pillars from the front\n          oldPillars.shift(); // remove first top pillar\n          oldPillars.shift(); // remove first bottom pillar\n        }\n\n        this.setState({\n          pillars: oldPillars\n        }, function () {\n          // console.log(\"pillars: \" + this.state.pillars.length);\n        });\n      } else clearInterval(this.timerID);\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var initPillars = [];\n      var windowHeight = $(window).height() - $(\"body\").offset().top - 80;\n      for (var i = 0; i < 10; i = i + 2) {\n        var topHeight = Math.floor(Math.random() * 250) + 80;\n        var bottomHeight = windowHeight - topHeight - 60;\n        var abovePillarId = \"pillar\" + i;\n        var belowPillarId = \"pillar\" + (i + 1);\n        initPillars.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"absolute\",\n            height: topHeight,\n            // marginBottom: \"100px\",\n            left: this.leftMargin + \"px\",\n            width: \"50px\",\n            backgroundColor: \"white\"\n          },\n          id: abovePillarId,\n          className: \"pillar\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 5\n        }, this));\n        initPillars.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"absolute\",\n            height: bottomHeight,\n            top: topHeight + 120,\n            left: this.leftMargin + \"px\",\n            width: \"50px\",\n            backgroundColor: \"white\"\n          },\n          id: belowPillarId,\n          className: \"pillar\"\n        }, i + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 5\n        }, this));\n        if (i <= 8) this.leftMargin += 250;else this.leftMargin -= 400;\n      }\n      this.setState({\n        pillars: initPillars\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.timerID);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // if (this.props.isGameOver) {\n      //   this.setState({\n      //     pillars: []\n      //   });\n      // }\n      return /*#__PURE__*/_jsxDEV(Pillars, {\n        pillars: this.state.pillars\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 10\n      }, this);\n    }\n  }]);\n  return PillarContainer;\n}(React.Component);\nexport { PillarContainer as default };","map":{"version":3,"names":["React","v4","$","Pillars","jsxDEV","_jsxDEV","PillarContainer","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","pillars","leftMargin","windowHeight","document","height","offset","top","_createClass","key","value","componentDidMount","_this2","timerID","setInterval","updatePillars","moveLeft","self","isGameOver","animate","left","stop","oldPillars","length","topHeight","Math","floor","random","bottomHeight","abovePillarId","belowPillarId","push","style","position","width","backgroundColor","id","className","fileName","_jsxFileName","lineNumber","columnNumber","shift","setState","clearInterval","componentWillMount","initPillars","window","i","componentWillUnmount","render","Component","default"],"sources":["D:/MUST/flappy-bird-react/src/containers/PillarContainer.js"],"sourcesContent":["import React from \"react\";\r\nimport { v4 } from \"uuid\";\r\nimport $ from \"jquery\";\r\n\r\nimport Pillars from \"../components/Pillars\";\r\n\r\nexport default class PillarContainer extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { pillars: [] };\r\n\t\tthis.leftMargin = 200;\r\n\t\tthis.windowHeight = $(document).height() - $(\"body\").offset().top - 80;\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.timerID = setInterval(() => this.updatePillars(), 1000);\r\n\t\tthis.moveLeft();\r\n\t}\r\n\r\n\t// Moves the pillars to the left\r\n\tmoveLeft() {\r\n\t\tlet self = this;\r\n\t\tif (!this.props.isGameOver) {\r\n\t\t\t$(\"[id^=pillar]\").animate(\r\n\t\t\t\t{\r\n\t\t\t\t\tleft: \"-=40px\" // Move the pillars to left\r\n\t\t\t\t},\r\n\t\t\t\t250,      // Perform the animation every 250ms\r\n\t\t\t\t\"linear\", // For smooth transition of animation\r\n\t\t\t\t() => {\r\n\t\t\t\t\tself.moveLeft();\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} else $(\"[id^=pillar]\").stop(true);\r\n\t}\r\n\r\n\t// Removes the old pillar and add new ones\r\n\tupdatePillars() {\r\n\t\tif (!this.props.isGameOver) {\r\n\t\t\tlet oldPillars = this.state.pillars;\r\n\t\t\tif (oldPillars.length <= 10) {\r\n\t\t\t\t// Total number of pillars are less than 10, add new pillars\r\n\t\t\t\tconst topHeight = Math.floor(Math.random() * 250) + 80;\r\n\t\t\t\tconst bottomHeight = this.windowHeight - topHeight - 60;\r\n\t\t\t\tconst abovePillarId = \"pillar\" + v4();\r\n\t\t\t\tconst belowPillarId = \"pillar\" + v4();\r\n\t\t\t\toldPillars.push(\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\t\t\theight: topHeight,\r\n\t\t\t\t\t\t\t// marginBottom: \"100px\",\r\n\t\t\t\t\t\t\tleft: this.leftMargin + \"px\",\r\n\t\t\t\t\t\t\twidth: \"50px\",\r\n\t\t\t\t\t\t\tbackgroundColor: \"white\"\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tkey={v4()}\r\n\t\t\t\t\t\tid={abovePillarId}\r\n\t\t\t\t\t\tclassName=\"pillar\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t\toldPillars.push(\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\t\t\theight: bottomHeight,\r\n\t\t\t\t\t\t\ttop: topHeight + 120,\r\n\t\t\t\t\t\t\tleft: this.leftMargin + \"px\",\r\n\t\t\t\t\t\t\twidth: \"50px\",\r\n\t\t\t\t\t\t\tbackgroundColor: \"white\"\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tkey={v4()}\r\n\t\t\t\t\t\tid={belowPillarId}\r\n\t\t\t\t\t\tclassName=\"pillar\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\t// Pillar count has exceeded 10, remove the old pillars from the front\r\n\t\t\t\toldPillars.shift();   // remove first top pillar\r\n\t\t\t\toldPillars.shift();   // remove first bottom pillar\r\n\t\t\t}\r\n\t\t\tthis.setState({\r\n\t\t\t\tpillars: oldPillars\r\n\t\t\t},\r\n\t\t\t\tfunction () {\r\n\t\t\t\t\t// console.log(\"pillars: \" + this.state.pillars.length);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} else clearInterval(this.timerID);\r\n\t}\r\n\r\n\tcomponentWillMount() {\r\n\t\tlet initPillars = [];\r\n\t\tconst windowHeight = $(window).height() - $(\"body\").offset().top - 80;\r\n\t\tfor (let i = 0; i < 10; i = i + 2) {\r\n\t\t\tlet topHeight = Math.floor(Math.random() * 250) + 80;\r\n\t\t\tlet bottomHeight = windowHeight - topHeight - 60;\r\n\t\t\tlet abovePillarId = \"pillar\" + i;\r\n\t\t\tlet belowPillarId = \"pillar\" + (i + 1);\r\n\t\t\tinitPillars.push(\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\t\theight: topHeight,\r\n\t\t\t\t\t\t// marginBottom: \"100px\",\r\n\t\t\t\t\t\tleft: this.leftMargin + \"px\",\r\n\t\t\t\t\t\twidth: \"50px\",\r\n\t\t\t\t\t\tbackgroundColor: \"white\"\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tkey={i}\r\n\t\t\t\t\tid={abovePillarId}\r\n\t\t\t\t\tclassName=\"pillar\"\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\r\n\t\t\tinitPillars.push(\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\t\theight: bottomHeight,\r\n\t\t\t\t\t\ttop: topHeight + 120,\r\n\t\t\t\t\t\tleft: this.leftMargin + \"px\",\r\n\t\t\t\t\t\twidth: \"50px\",\r\n\t\t\t\t\t\tbackgroundColor: \"white\"\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tkey={i + 1}\r\n\t\t\t\t\tid={belowPillarId}\r\n\t\t\t\t\tclassName=\"pillar\"\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t\tif (i <= 8) this.leftMargin += 250;\r\n\t\t\telse this.leftMargin -= 400;\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tpillars: initPillars\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(this.timerID);\r\n\t}\r\n\r\n\trender() {\r\n\t\t// if (this.props.isGameOver) {\r\n\t\t//   this.setState({\r\n\t\t//     pillars: []\r\n\t\t//   });\r\n\t\t// }\r\n\t\treturn <Pillars pillars={this.state.pillars} />;\r\n\t}\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}